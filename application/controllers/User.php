<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class User extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('User_model');
        
        if(!isset($_SESSION['user_logged'])){
            $this->session->set_flashdata('error','connecter !!!!');
            redirect('auth/login');
        }

    } 

    /*
     * Listing of users
     */
    // function index()
    // {
    //     $data['users'] = $this->User_model->get_all_users();
        
    //     $data['_view'] = 'user/index';
    //     $this->load->view('layouts/main',$data);
    // }

    /*
     * Adding a new user
     */
    function add()
    {   
        if(isset($_POST) && count($_POST) > 0)     
        {   
            $params = array(
				'usertype' => $this->input->post('usertype'),
				'matricule' => $this->input->post('matricule'),
				'cin' => $this->input->post('cin'),
				'nom' => $this->input->post('nom'),
				'prenom' => $this->input->post('prenom'),
				'adress' => $this->input->post('adress'),
				'num_etab_sec' => $this->input->post('num_etab_sec'),
				'cod_category' => $this->input->post('cod_category'),
				'cod_tva' => $this->input->post('cod_tva'),
				'is_benificiare' => 1,
                'added_by' => $_SESSION['user']['userid'],
            );
            
            $user_id = $this->User_model->add_user($params);
            redirect('history/add');
        }
        else
        {            
            $data['_view'] = 'user/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a user
     */
    function edit($userid)
    {   
        // check if the user exists before trying to edit it
        $data['user'] = $this->User_model->get_user($userid);
        
        if(isset($data['user']['userid']))
        {
            if(isset($_POST) && count($_POST) > 0)     
            {   
                $params = array(
					'usertype' => $this->input->post('usertype'),
					'matricule' => $this->input->post('matricule'),
					'cin' => $this->input->post('cin'),
					'nom' => $this->input->post('nom'),
					'prenom' => $this->input->post('prenom'),
                    'adress' => $this->input->post('adress'),
					'num_etab_sec' => $this->input->post('num_etab_sec'),
					'cod_category' => $this->input->post('cod_category'),
					'cod_tva' => $this->input->post('cod_tva'),
                );

                $this->User_model->update_user($userid,$params);            
                redirect('user/index');
            }
            else
            {
                $data['_view'] = 'user/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The user you are trying to edit does not exist.');
    } 

    /*
     * Deleting user
     */
    function remove($userid)
    {
        $user = $this->User_model->get_user($userid);

        // check if the user exists before trying to delete it
        if(isset($user['userid']))
        {
            $this->User_model->delete_user($userid);
            redirect('user/index');
        }
        else
            show_error('The user you are trying to delete does not exist.');
    }

    


    // function register(){
    //     if(isset($_POST) && count($_POST) > 0) {
    //         $this->form_validation->set_rules('username', 'Username', 'required');
    //         $this->form_validation->set_rules('password', 'Password', 'required|min_length[5]');

    //         if($this->form_validation->run() == TRUE){
    //             $params = array(
	// 				'usertype' => $this->input->post('usertype'),
	// 				'matricule' => $this->input->post('matricule'),
	// 				'cin' => $this->input->post('cin'),
	// 				'nom' => $this->input->post('nom'),
	// 				'prenom' => $this->input->post('prenom'),
	// 				'username' => $this->input->post('username'),
	// 				'password' => $this->input->post('password'),
    //                 'adress' => $this->input->post('adress'),
	// 				'num_etab_sec' => $this->input->post('num_etab_sec'),
	// 				'cod_category' => $this->input->post('cod_category'),
	// 				'cod_tva' => $this->input->post('cod_tva'),
    //             );

    //             $user_id = $this->User_model->add_user($params);
    //             $this->session->set_flashdata("success","Votre compte a été bien crée. Vous pouvez vous connecter.");
    //             redirect('user/login');
    //         }


    //     }
    //     $this->load->view('register');
    // }

    // function login(){
    //     if(isset($_POST) && count($_POST) > 0) {
    //         $this->form_validation->set_rules('username', 'Username', 'required');
    //         $this->form_validation->set_rules('password', 'Password', 'required|min_length[5]');

    //         if($this->form_validation->run() == TRUE){
    //             $username = $this->input->post('username');
    //             $password = md5($this->input->post('password'));
    //             $user = $this->User_model->verify_user($username, $password);
    //             if($user){
    //                 $this->session->set_flashdata("success","Vous etes connecté(e).");
    //                 $_SESSION['user_logged'] = TRUE;
    //                 $_SESSION['user'] = $user['username'];
    //                 redirect('dashboard');

    //             }else{
    //                 $this->session->set_flashdata("error","Pas de compte.");
    //                 redirect('user/login');

    //             }
    //         }
        
    //     }
    //     $this->load->view('login');
    // }


}
